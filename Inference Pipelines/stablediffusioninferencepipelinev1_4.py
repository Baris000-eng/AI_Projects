# -*- coding: utf-8 -*-
"""StableDiffusionInferencePipelinev1-4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12peMXvSYQ3LTOdu56a53Lko72x2SvS4N
"""

# Necessary libraries to import
import torch
from diffusers import StableDiffusionPipeline
from google.colab import drive

# Mounting your Google Drive account to the Google Colab environment
drive.mount('/content/drive', force_remount=True)

# Defining the base directory of the images to be saved
base_directory = "/content/drive/MyDrive/"

# Assign the computing device to cuda if available else cpu
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
pipe = None

# Load the pretrained stable diffusion model named "CompVis/stable-diffusion-v1-4" depending on the type of computing device
if device == "cuda":
    pipe = StableDiffusionPipeline.from_pretrained(
        "CompVis/stable-diffusion-v1-4",
        torch_dtype=torch.float16,
        safety_checker = None,
        requires_safety_checker = False
    )
else:
    pipe = StableDiffusionPipeline.from_pretrained(
        "CompVis/stable-diffusion-v1-4",
        safety_checker = None,
        requires_safety_checker = False
    )


# Transfer the pipe to the available device
pipe = pipe.to(device)

# input prompt text
prompt = """A Bart Simpson-like cartoon character with yellow skin and big eyes, is
watching television while sitting on a sofa. The character has bright colors, clear outlines,
and a humorous tone, in the style of 'The Simpsons'.
"""

high_guidance_scale_value = 15
# Generating the image with the high guidance scale
image = pipe(prompt, guidance_scale=high_guidance_scale_value).images[0]
image.save(base_directory + "bart_simpson_with_high_guidance.png")
print(f"Simpsons-like image is generated with guidance_scale={high_guidance_scale_value} and saved to bart_simpson_with_high_guidance.png.")

low_guidance_scale_value = 5
image = pipe(prompt, guidance_scale=low_guidance_scale_value).images[0]
image.save(base_directory + "bart_simpson_with_low_guidance.png")
print(f"Simpsons-like image is generated with guidance_scale={low_guidance_scale_value} and saved to bart_simpson_with_low_guidance.png.")

# Low resolution
image = pipe(prompt, height=512, width=512).images[0]
image.save(base_directory + "bart_simpson_low_resolution.png")
print(f"Simpsons-like image with low resolution is saved to bart_simpson_low_resolution.png.")

# High resolution
image = pipe(prompt, height=1024, width=1024).images[0]
image.save(base_directory + "bart_simpson_high_resolution.png")
print(f"Simpsons-like image with high resolution is saved to bart_simpson_high_resolution.png.")

# Low denoising steps (faster, less detailed)
image = pipe(prompt, num_inference_steps=25).images[0]
image.save(base_directory + "bart_simpson_25_denoising_steps.png")
print(f"Simpsons-like image with 25 (low) denoising steps is saved to bart_simpson_25_denoising_steps.png.")

# High denoising steps (slower, more detailed)
image = pipe(prompt, num_inference_steps=150).images[0]
image.save(base_directory + "bart_simpson_150_denoising_steps.png")
print(f"Simpsons-like image with 150 (high) denoising steps is saved to bart_simpson_150_denoising_steps.png.")







